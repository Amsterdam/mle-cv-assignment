trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: BuildAndScan
  displayName: 'Build Docker image and perform vulnerability scan'
  steps:

  # Step 1: Cache Trivy database to avoid downloading it every time
  - task: Cache@2
    inputs:
      key: 'trivy-db-$(Agent.OS)-$(Build.SourceBranchName)'
      restoreKeys: |
        trivy-db-$(Agent.OS)-
      path: ~/.cache/trivy

  # Step 2: Install Trivy
  - script: |
      sudo apt-get update
      sudo apt-get install -y wget
      wget https://github.com/aquasecurity/trivy/releases/download/v0.38.0/trivy_0.38.0_Linux-64bit.deb
      sudo dpkg -i trivy_0.38.0_Linux-64bit.deb
    displayName: 'Install Trivy'

  # Step 3: Refresh the Trivy DB to ensure it's up-to-date
  - script: |
      trivy --refresh
    displayName: 'Refresh Trivy DB'

  # Step 4: Build Docker image
  - task: Docker@2
    displayName: 'Build Docker image'
    inputs:
      command: 'build'
      containerRegistry: 'yourContainerRegistry'  # Replace with your registry
      repository: 'yolo_on_edge'
      dockerfile: '**/Dockerfile'  # Assuming Dockerfile is at the root
      tags: '$(Build.BuildId)'

  # Step 5: Perform the Trivy security scan with cached DB
  - script: |
      trivy fs --severity HIGH,CRITICAL --exit-code 1 .  # Scan for high and critical vulnerabilities
    displayName: 'Run Trivy Security Scan'
    continueOnError: true  # To allow the pipeline to continue even if the scan fails